openapi: '3.0.0'
info:
  version: '1.0.0'
  title: 'Online service store API'
  description: API for a service store server
servers:
  - url: http://0.0.0.0
    description: service store server
paths:
  /user:
    post:
      summary: Create a new user
      parameters:
      - name: first_name
        description: First name
        in: query
        required: true
        schema:
          type: string
      - name: last_name
        description: Last name
        in: query
        required: true
        schema:
          type: string
      - name: email
        description: E-mail
        in: query
        required: true
        schema:
          type: string
      - name: title
        description: title
        in: query
        required: true
        schema:
          type: string
      - name: user_type
        description: User type admin/seller/buyer
        in: query
        required: true
        schema:
          type: string
      responses:
        201:
          description: Success! A new user created and Added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        404:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        501:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /user/search:
    get:
      summary: Find user by his first name and last name
      parameters:
      - name: first_name
        description: First name
        in: query
        required: true
        schema:
          type: string
      - name: last_name
        description: Last name
        in: query
        required: true
        schema:
          type: string
      responses:
        201:
          description: Users corresponding to the provided `first_name` and `last_name`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Users'
        404:
          description: No user found for the provided `first_name` and `last_name`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service:
    post:
      summary: Create a new service
      parameters:
      - name: service_special_id
        description: Service's id
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/id'
      - name: name
        description: Service's name
        in: query
        required: true
        schema:
          type: string
      - name: price
        description: Service's price
        in: query
        required: true
        schema:
          type: number
      responses:
        201:
          description: A new Service created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
        404:
          description: No shopping item found for the provided `id`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      summary: Read an service by its id
      parameters:
      - name: service_special_id
        description: Service's id
        in: query
        required: true
        schema:
          type: string
      responses:
        201:
          description: The service corresponding to the provided `service_id`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
        404:
          description: No item found for the provided `sku`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/search:
    get:
      summary: Search for an service by its name
      parameters:
      - name: name
        description: Service name
        in: query
        required: true
        schema:
          type: string
      responses:
        201:
          description: Corresponding service to the provided `name`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
        404:
          description: No item found for the provided `name`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /service/all:
    get:
      summary: Get list of all services
      parameters: []
      responses:
        201:
          description: All shopping services
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Services'
        404:
          description: No items found at all
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /order:
    get:
      summary: Get user's order
      parameters:
      - name: user_id
        description: User's identifier
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/id'
      responses:
        201:
          description: order corresponding to the provided `user_id`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        404:
          description: No order found for the provided `name`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create a new order
      parameters:
      - name: user_id
        description: User's id
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/id'
      responses:
        201:
          description: A new order created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        404:
          description: No order found for the provided `id`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /order/add:
    post:
      summary: Add an service to a order
      parameters:
      - name: order_id
        description: A desired order id
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/id'
      - name: service_id
        description: A service id
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/id'
      responses:
        201:
          description: The item added to the order
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessMessage'
        404:
          description: No order found for the provided `id`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /order/all:
    get:
      summary: Get all orders
      parameters: []
      responses:
        201:
          description: All orders
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Orders'
        404:
          description: No orders found at all
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    id:
      description: Unique identifier
      type: integer
    
    Users:
      type: array
      items:
        $ref: '#/components/schemas/User'
    User:
      type: object
      required:
        - id
        - first_name
        - last_name
        - email
        - title
        - type
      properties:
        id:
          $ref: '#/components/schemas/id'
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        title:
          type: string
        type:
          type: string
    
    Services:
      type: array
      items:
        $ref: '#/components/schemas/Service'
    Service:
      type: object
      required:
        - id
        - first_name
        - last_name
        - email
        - title
        - type
      properties:
        id:
          $ref: '#/components/schemas/id'
        sku:
          type: string
        name:
          type: string
        price:
          type: number

    Orders:
      type: array
      items:
        $ref: '#/components/schemas/Order'
    Order:
      type: object
      required:
        - id
        - user_id
        - created
      properties:
        id:
          $ref: '#/components/schemas/id'
        user_id:
          $ref: '#/components/schemas/id'
        created:
          type: string

    Error:
      type: object
      required:
        - message
      properties:
        message:
          description: A human readable error message
          type: string
    
    SuccessMessage:
      type: object
      required:
        - message
      properties:
        message:
          description: A success message
          type: string